// This file is part of www.nand2tetris.org
// and the book "The Elements of Computing Systems"
// by Nisan and Schocken, MIT Press.
// File name: projects/05/Memory.hdl

/**
 * The complete address space of the Hack computer's memory,
 * including RAM and memory-mapped I/O. 
 * The chip facilitates read and write operations, as follows:
 *     Read:  out(t) = Memory[address(t)](t)
 *     Write: if load(t-1) then Memory[address(t-1)](t) = in(t-1)
 * In words: the chip always outputs the value stored at the memory 
 * location specified by address. If load==1, the in value is loaded 
 * into the memory location specified by address. This value becomes 
 * available through the out output from the next time step onward.
 * Address space rules:
 * Only the upper 16K+8K+1 words of the Memory chip are used. 
 * Access to address>0x6000 is invalid. Access to any address in 
 * the range 0x4000-0x5FFF results in accessing the screen memory 
 * map. Access to address 0x6000 results in accessing the keyboard 
 * memory map. The behavior in these addresses is described in the 
 * Screen and Keyboard chip specifications given in the book.
 */

CHIP Memory {
    IN in[16], load, address[15];
    OUT out[16];

    PARTS:  
    // memory 0x0000-0x3FFF         (_000 0000 0000 0000)
    //                              (_011 1111 1111 1111)
    Not(in=address[14],out=useRam);
    Mux16(/*a=,*/b=in,sel=useRam,out=Rin);
    Mux(/*a=,*/b=load,sel=useRam,out=Rload);
    Mux16(/*a=,*/b[0..14]=address,sel=useRam,out[0..13]=Raddr);
    RAM16K(in=Rin,address=Raddr,load=Rload,out=Rout);//16 15 1 16
    
    // screen memory 0x4000-0x5FFF  (_100 0000 0000 0000)
    //                              (_101 1111 1111 1111)
    Not(in=address[13],out=naddr13);
    And(a=naddr13,b=address[14],out=useScreen);
    Mux16(/*a=,*/b=in,sel=useScreen,out=Sin);
    Mux(/*a=,*/b=load,sel=useScreen,out=Sload);
    Mux16(/*a=,*/b[0..14]=address,sel=useScreen,out[0..12]=Saddr);
    Screen(in=Sin,address=Saddr,load=Sload,out=Sout);//16 15 1 16

    // keyboard memory 0x6000       (_110 0000 0000 0000)
    And(a=address[13],b=address[14],out=useKeyboard);
    Keyboard(out=Kout);//16

    // handle output
    Mux16(/*a=,*/b=Rout,sel=useRam,out=tempOut);
    Mux16(a=tempOut,b=Sout,sel=useScreen,out=tempOut2);
    Mux16(a=tempOut2,b=Kout,sel=useKeyboard,out=out);
}